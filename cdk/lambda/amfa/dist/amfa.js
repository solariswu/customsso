var ue=Object.create;var U=Object.defineProperty;var me=Object.getOwnPropertyDescriptor;var de=Object.getOwnPropertyNames;var fe=Object.getPrototypeOf,he=Object.prototype.hasOwnProperty;var we=(e,s)=>{for(var n in s)U(e,n,{get:s[n],enumerable:!0})},Y=(e,s,n,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let o of de(s))!he.call(e,o)&&o!==n&&U(e,o,{get:()=>s[o],enumerable:!(t=me(s,o))||t.enumerable});return e};var Q=(e,s,n)=>(n=e!=null?ue(fe(e)):{},Y(s||!e||!e.__esModule?U(n,"default",{value:e,enumerable:!0}):n,e)),ge=e=>Y(U({},"__esModule",{value:!0}),e);var ke={};we(ke,{handler:()=>Te});module.exports=ge(ke);var M=require("@aws-sdk/client-cognito-identity-provider");var $=require("@aws-sdk/client-cognito-identity-provider"),ne=require("node:crypto");var b=require("@aws-sdk/client-dynamodb"),Z=async(e,s)=>{let n=new b.DynamoDBClient({region:process.env.AWS_REGION}),t={TableName:process.env.AUTHCODE_TABLE,Key:{username:{S:e},apti:{S:s}}},o=new b.GetItemCommand(t),r=await n.send(o);console.log("get authcode result:",r);let C=r.Item.state.S,u=r.Item.authCode.S;return`${r.Item.redirectUri.S}/?code=${u}&state=${C}`};var ee=Q(require("crypto"),1),_=require("@aws-sdk/client-cognito-identity-provider"),G=require("@aws-sdk/client-dynamodb");function Ce(e){for(var s="",n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",t=n.length,o=0;o<e;o++)s+=n.charAt(Math.floor(Math.random()*t));return s}var Ae=async(e,s)=>{let n=process.env.APPCLIENT_ID,t=process.env.APP_SECRET,o=ee.createHmac("SHA256",t).update(e+n).digest("base64"),r={AuthFlow:"CUSTOM_AUTH",ClientId:n,AuthParameters:{USERNAME:e,SECRET_HASH:o}};console.log("initiateAuthParam:",r);let C=new _.InitiateAuthCommand(r),u=await s.send(C);if(u.ChallengeName==="CUSTOM_CHALLENGE"){let i={ChallengeName:"CUSTOM_CHALLENGE",ClientId:n,ChallengeResponses:{USERNAME:e,SECRET_HASH:o,ANSWER:process.env.MAGIC_STRING},Session:u.Session},m=new _.RespondToAuthChallengeCommand(i),E=await s.send(m);return console.log("user:",E),E}return null},Se=async(e,s,n)=>{console.log("tokens write user:",e),console.log("payload:",s),console.log("authCode:",n);let t='{"id_token":"'+e.AuthenticationResult.IdToken+'","access_token":"'+e.AuthenticationResult.AccessToken+'","refresh_token":"'+e.AuthenticationResult.RefreshToken+'","expires_in":300,"token_type":"Bearer"}',o={Item:{username:{S:s.email},apti:{S:s.apti},authCode:{S:n},state:{S:s.state},redirectUri:{S:s.redirectUri},tokenString:{S:t},timestamp:{N:`${s.requestTimeEpoch}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.AUTHCODE_TABLE},r=new G.PutItemCommand(o),u=await new G.DynamoDBClient({region:process.env.AWS_REGION}).send(r);console.log("tokens write result:",u)},te=async(e,s)=>{let n=await Ae(e.email,s);if(n.AuthenticationResult){let t=Ce(32);return await Se(n,e,t),`${e.redirectUri}/?code=${t}&state=${e.state}`}return null};var p={super_admin:{policy_name:"epnd-su-rg83ed78xa38",rank:1,permissions:["e","ae","v"]},admin:{policy_name:"epnd-su-72ja37bc51mz",rank:2,permissions:["e","ae","s","v"]},cohort_owner:{policy_name:"epnd-cohort-owner-52ws89xs12gz",rank:3,permissions:["e","ae","s","v"]},user:{policy_name:"epnd-user-63em98az26jq47",rank:4,permissions:["e","ae","s","v"]},"password-reset":{policy_name:"EPND-Pwd-Reset-72vc59zx34"},default:{policy_name:"epnd-default-72ws81aq67jf",rank:5,permissions:["e"]}},D={salt:"arandomstring-here",enable_passwordless:!0,asmurl:"https://asm2.apersona.com:8443/asm"};var se="apenc";var x=require("@aws-sdk/client-dynamodb"),re=Q(require("crypto"),1),Ie=new x.DynamoDBClient({region:process.env.AWS_REGION}),oe=async(e,s)=>{console.log("generate pwd reset id for user:",e),console.log("generate pwd reset id, apti :",s);let n=re.randomUUID(),t=Date.now(),o={Item:{uuid:{S:n},username:{S:e},apti:{S:s},timestamp:{N:`${t}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.PWDRESET_ID_TABLE},r=new x.PutItemCommand(o),C=await Ie.send(r);return console.log("pwd reset id write result:",C),n};var h=async(e,s,n,t)=>{let o=(i,m)=>({isBase64Encoded:!1,statusCode:i,headers:s,body:JSON.stringify({message:m})}),r={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"};function C(i){return(0,ne.createHash)("md5").update(i).digest("hex")}try{let i=D.salt,m=D.asmurl,E={UserPoolId:process.env.USERPOOL_ID,Filter:'email = "'+e.email+'"'},A=await n.send(new $.ListUsersCommand(E));if(!A||!A.Users||A.Users.length===0)return console.log("Did not find valid user for email:",e.email),o(500,"Did not find valid user for this email");let v=A.Users.filter(a=>a.UserStatus==="CONFIRMED");if(v.length===0)return console.log("Did not find valid user for email:",e.email),o(500,"Did not find valid user for this email, user status is not CONFIRMED");console.log("UserAttributes:",v[0].Attributes);let k=v[0].Attributes.reduce((a,S)=>(a[S.Name]=S.Value,a)),W={UserPoolId:process.env.USERPOOL_ID,Username:v[0].Username},l=await n.send(new $.AdminListGroupsForUserCommand(W));if(console.log("userGroup:",l),!l||!l.Groups||l.Groups.length===0)return console.log("Did not find a valid user group"),o(500,"Did not find a valid user group");let d="",z=1e4;for(let a=0;a<l.Groups.length;a++)l.Groups[a].GroupName=l.Groups[a].GroupName.toLowerCase(),p[l.Groups[a].GroupName]&&p[l.Groups[a].GroupName].rank<z&&(d=l.Groups[a].GroupName,z=p[l.Groups[a].GroupName].rank);if(p[d]||(d="default"),console.log("ug:",d),t===5){let a=JSON.stringify({otpOptions:p[d].permissions,email:k.email,phoneNumber:k.phone_number,aemail:k["custom:alter-email"],vPhoneNumber:k["custom:voice-number"]});return console.log("body:",a),{statusCode:200,isBase64Encoded:!1,headers:s,body:a}}let T=p[d].policy_name?encodeURI(p[d].policy_name):"";if(t>=6&&t<=10&&(T=p["password-reset"].policy_name?encodeURI(p["password-reset"].policy_name):""),T==="")return console.log("Did not find a valid ASM Policy for the user group:",d),o(500,`Did not find a valid ASM Policy for the user group:${d})`);let H=e.origin,P=6,I=e.email,K=e.rememberDevice==="true"?0:1,V=encodeURI(e.authParam),L=e.uIP?e.uIP:"00000000000",O=e.apti,R="e",y=I,N=1,ie=3,X=I+"passwordless_check"+L,q=C(`${I}${H}${i}`),j="";if(e.cookies&&e.cookies.trim().length>0){let a=e.cookies.trim().indexOf(q)+q.length+1;j=e.cookies.trim().substring(a).split(";")[0]}let c=encodeURI("Initial passwordless login verification");t===6&&(c=encodeURI("Password reset 1st verify")),t===7&&(c=encodeURI("Password reset 2nd verify"));let f=m+"/extAuthenticate.kv?l="+T+"&u="+I+"&uIp="+L+"&apti="+O+"&c="+j+"&wr="+H+"&igd="+K+"&otpm="+R+"&p="+y+"&otpp="+N+"&af1="+X+"&a="+V;switch(t){case 1:c=encodeURI("Initial passwordless login verification"),f=f+"&sfl="+P+"&nsf="+ie+"&tType="+c;break;case 2:c=encodeURI("Password login verification"),f=f+"&tType="+c;break;case 3:c=encodeURI("Request OTP"),R=e.otptype,y=e.otpaddr,f=m+"/extResendOtp.kv?l="+T+"&u="+I+"&apti="+O+"&otpm="+R+"&p="+y+"&tType="+c;break;case 4:case 7:case 9:c=encodeURI("OTP verify");let a=e.otpcode;f=m+"/extVerifyOtp.kv?l="+T+"&u="+I+"&uIp="+L+"&apti="+O+"&wr="+H+"&igd="+K+"&otpm="+R+"&p="+y+"&otpp="+N+"&tType="+c+"&af1="+X+"&a="+V+"&o="+a;break;case 6:c=encodeURI("Password reset 1st verify"),R=e.otptype,y=e.otpaddr,P=7,N=0,f=m+"/extAuthenticate.kv?l="+T+"&sfl="+P+"&u="+I+"&apti="+O+"&otpm="+R+"&p="+y+"&tType="+c+"&otpp="+N;break;case 8:c=encodeURI("Password reset 2nd verify"),R=e.otptype,y=e.otpaddr,P=7,N=0,f=m+"/extAuthenticate.kv?l="+T+"&sfl="+P+"&u="+I+"&apti="+O+"&otpm="+R+"&p="+y+"&tType="+c+"&otpp="+N;break;default:break}console.log("now posting to : ",f);let B=await fetch(f,{method:"POST"});if(B&&B.status){let a=await B.json();switch(console.log("amfaResponseJSON:",a),a.code){case 200:switch(t){case 1:case 2:case 4:if(a.message==="OK"){let S=t===1?await te(e,n):await Z(e.email,e.apti);if(console.log("url:",S),S){Date.prototype.addDays=function(pe){var F=new Date(this.valueOf());return F.setDate(F.getDate()+pe),F};var u=new Date;let ce=`${q}=${a.identifier}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; HttpOnly; Expires=${u.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`,le=`${se}=${a.identifier.substr(-16,16)}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; Expires=${u.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`;return{statusCode:200,isBase64Encoded:!1,multiValueHeaders:{"Set-Cookie":[ce,le]},headers:r,body:JSON.stringify({location:S})}}else return o(505,"Service error, please contact the help desk.")}else return o(501,"The login service is not currently available. Contact the help desk.");case 7:case 9:if(a.message==="OK"){let S="";return(t===7||t===9)&&(S=await oe(e.email,e.apti)),{isBase64Encoded:!1,statusCode:200,headers:s,body:JSON.stringify({message:"OK",uuid:S})}}else return o(501,"The login service is not currently available. Contact the help desk.");default:return o(505,"The login service is not currently available. Contact the help desk.")}case 202:switch(t){case 1:return o(202,"Your identity requires password login.");case 2:return{statusCode:202,isBase64Encoded:!1,headers:r,body:JSON.stringify({...k,otpOptions:p[d].permissions})};case 3:case 6:case 8:return o(202,a.message);case 4:case 7:case 9:return o(403,"The identity code you entered was not correct. Please try again.");default:break}break;case 203:return o(203,"Your location is not permitted. Contact the help desk.");case 401:return o(401,"You took too long or entered your otp wrong too many times. Try your login again.");default:return o(502,"We ran into an issue. Please contact the help desk.")}}return o(503,"amfa response error")}catch(i){return console.error("Error in step "+t+":",i),i.message.indexOf("fetch failed")===-1?o(504,i.message?i.message:"Unknown error in amfa steps"):o(504,"MFA Service is not responding. Contact the help desk.")}};var Re=e=>{switch(e.phase){case"username":return e&&e.email&&e.apti&&e.rememberDevice&&e.authParam;case"password":return e&&e.email&&e.password&&e.apti&&e.rememberDevice&&e.authParam;case"sendotp":case"pwdreset2":case"pwdreset3":return e&&e.otpaddr&&e.otptype&&e.apti&&e.rememberDevice&&e.authParam;case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.rememberDevice&&e.authParam;case"pwdreset1":return e&&e.email&&e.apti&&e.authParam;default:break}return!1},g={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"},J=(e=200,s)=>({statusCode:e,headers:g,body:s}),w=new M.CognitoIdentityProviderClient({region:process.env.AWS_REGION}),ye=e=>e.split(",")[0],Te=async e=>{console.log("Received event:",JSON.stringify(e,null,2));let s=Math.random().toString(36).substring(2,16)+Math.random().toString(36).substring(2,16),n="";try{let t=JSON.parse(e.body);if(console.log("payload",t),t&&Re(t)){let o=ye(e.headers["X-Forwarded-For"].trim()),r={};switch(r.uIP=o,r.email=t.email,r.apti=t.apti,r.rememberDevice=t.rememberDevice,r.authParam=t.authParam,r.origin=`${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,r.otptype=t.otptype,r.otpcode=t.otpcode,r.otpaddr=t.otpaddr,r.redirectUri=t.redirectUri,r.state=t.state,r.requestTimeEpoch=e.requestContext.requestTimeEpoch,r.cookies=e.headers.Cookie,console.log("oneEvent",r),t.phase){case"pwdreset2":return await h(r,g,w,6);case"pwdresetverify2":return await h(r,g,w,7);case"pwdreset3":return await h(r,g,w,8);case"pwdresetverify3":return await h(r,g,w,9);case"pwdreset1":return await h(r,g,w,5);case"username":let A=await w.send(new M.ListUsersCommand({UserPoolId:process.env.USERPOOL_ID,Filter:`email = "${t.email}"`}));return console.log(A),D.enable_passwordless&&A&&A.Users&&A.Users.length>0?await h(r,g,w,1):J(202,"Your identity requires password login.");case"password":return await h(r,g,w,2);case"sendotp":return await h(r,g,w,3);case"verifyotp":return await h(r,g,w,4);default:break}}else n="incoming params error."}catch(t){return console.log(t),J(t.statusCode?t.statusCode:500,JSON.stringify({message:"input param parse error"}))}return J(500,JSON.stringify({message:n}))};0&&(module.exports={handler});
//# sourceMappingURL=amfa.js.map
