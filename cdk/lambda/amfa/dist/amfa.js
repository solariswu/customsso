var we=Object.create;var E=Object.defineProperty;var Ie=Object.getOwnPropertyDescriptor;var Se=Object.getOwnPropertyNames;var Ce=Object.getPrototypeOf,Pe=Object.prototype.hasOwnProperty;var Oe=(e,r)=>{for(var a in r)E(e,a,{get:r[a],enumerable:!0})},re=(e,r,a,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of Se(r))!Pe.call(e,t)&&t!==a&&E(e,t,{get:()=>r[t],enumerable:!(s=Ie(r,t))||s.enumerable});return e};var oe=(e,r,a)=>(a=e!=null?we(Ce(e)):{},re(r||!e||!e.__esModule?E(a,"default",{value:e,enumerable:!0}):a,e)),ye=e=>re(E({},"__esModule",{value:!0}),e);var Ee={};Oe(Ee,{handler:()=>ke});module.exports=ye(Ee);var H=require("@aws-sdk/client-cognito-identity-provider");var M=require("@aws-sdk/client-cognito-identity-provider"),he=require("node:crypto");var R=require("@aws-sdk/client-dynamodb"),ae=async(e,r)=>{let a=new R.DynamoDBClient({region:process.env.AWS_REGION}),s={TableName:process.env.AUTHCODE_TABLE,Key:{username:{S:e},apti:{S:r}}},t=new R.GetItemCommand(s),o=await a.send(t);console.log("get authcode result:",o);let c=o.Item.state.S,d=o.Item.authCode.S;return`${o.Item.redirectUri.S}/?code=${d}&state=${c}`};var ie=oe(require("crypto"),1),_=require("@aws-sdk/client-cognito-identity-provider"),D=require("@aws-sdk/client-dynamodb");function Ae(e){for(var r="",a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",s=a.length,t=0;t<e;t++)r+=a.charAt(Math.floor(Math.random()*s));return r}var Te=async(e,r)=>{let a=process.env.APPCLIENT_ID,s=process.env.APP_SECRET,t=ie.createHmac("SHA256",s).update(e+a).digest("base64"),o={AuthFlow:"CUSTOM_AUTH",ClientId:a,AuthParameters:{USERNAME:e,SECRET_HASH:t}};console.log("initiateAuthParam:",o);let c=new _.InitiateAuthCommand(o),d=await r.send(c);if(d.ChallengeName==="CUSTOM_CHALLENGE"){let l={ChallengeName:"CUSTOM_CHALLENGE",ClientId:a,ChallengeResponses:{USERNAME:e,SECRET_HASH:t,ANSWER:process.env.MAGIC_STRING},Session:d.Session},u=new _.RespondToAuthChallengeCommand(l),S=await r.send(u);return console.log("user:",S),S}return null},be=async(e,r,a)=>{console.log("tokens write user:",e),console.log("payload:",r),console.log("authCode:",a);let s='{"id_token":"'+e.AuthenticationResult.IdToken+'","access_token":"'+e.AuthenticationResult.AccessToken+'","refresh_token":"'+e.AuthenticationResult.RefreshToken+'","expires_in":300,"token_type":"Bearer"}',t={Item:{username:{S:r.email},apti:{S:r.apti},authCode:{S:a},state:{S:r.state},redirectUri:{S:r.redirectUri},tokenString:{S:s},timestamp:{N:`${r.requestTimeEpoch}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.AUTHCODE_TABLE},o=new D.PutItemCommand(t),d=await new D.DynamoDBClient({region:process.env.AWS_REGION}).send(o);console.log("tokens write result:",d)},ne=async(e,r)=>{let a=await Te(e.email,r);if(a.AuthenticationResult){let s=Ae(32);return await be(a,e,s),`${e.redirectUri}/?code=${s}&state=${e.state}`}return null};var q=require("@aws-sdk/client-cognito-identity-provider"),ce=async(e,r,a,s)=>{console.log("username:",e,"password:",r,"attributes:",a);let t=[];Object.keys(a).forEach(d=>{t.push({Name:d,Value:a[d]})}),t.push({Name:"email",Value:e}),t.push({Name:"email_verified",Value:"true"});let o={UserPoolId:process.env.USERPOOL_ID,Username:e.replace("@","_").replace(".","_"),UserAttributes:t,TemporaryPassword:r,MessageAction:"SUPPRESS"};console.log("adminCreateUserParam:",o);let c=await s.send(new q.AdminCreateUserCommand(o));return o={UserPoolId:process.env.USERPOOL_ID,Username:e,Password:r,Permanent:!0},await s.send(new q.AdminSetUserPasswordCommand(o)),console.log("user:",c),c};var le="apenc";var x=require("@aws-sdk/client-dynamodb"),ue=oe(require("crypto"),1),Ne=new x.DynamoDBClient({region:process.env.AWS_REGION}),$=async(e,r,a)=>{console.log("generating session id for user:",e," apti:",r," otpaddr:",a);let s=ue.randomUUID(),t=Date.now(),c={Item:{uuid:{S:s},username:{S:e},apti:{S:r},otpaddr:{S:a||""},timestamp:{N:`${t}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.SESSION_ID_TABLE},d=new x.PutItemCommand(c),l=await Ne.send(d);return console.log("session id creation result:",l),s};var G=require("@aws-sdk/client-dynamodb"),U=async e=>{let r=new G.DynamoDBClient({region:process.env.AWS_REGION}),a={TableName:process.env.AMFACONFIG_TABLE,Key:{configtype:{S:e}}},s=new G.GetItemCommand(a),t=await r.send(s);if(t.Item===void 0)throw new Error(`No ${e} found`);let o=JSON.parse(t.Item.value.S);return console.log(`get ${e}:`,o),o};var de=require("@aws-sdk/client-cognito-identity-provider"),L=require("@aws-sdk/client-dynamodb"),me=async(e,r)=>{let a=new L.DynamoDBClient({region:process.env.AWS_REGION}),s={TableName:process.env.SESSION_ID_TABLE,Key:{uuid:{S:e.uuid}}};try{let t=new L.GetItemCommand(s),o=await a.send(t);console.log("get update profile uid result:",o);let c=o.Item.username.S,d=o.Item.apti.S,l=o.Item.otpaddr.S,u=o.Item.timestamp.N,S=Date.now()-u>1e3*60*5,h=c===e.email&&d===e.apti&&!S;return h&&(r==="updateProfile"||r==="removeProfile")?h&&l===e.newProfile:h}catch(t){console.log("error",t)}return!1},F=async(e,r,a,s,t)=>{let o=[];switch(r){case"ae":o.push({Name:"custom:alter-email",Value:a});break;case"v":o.push({Name:"custom:voice-number",Value:a});break;case"s":o.push({Name:"phone_number",Value:a}),o.push({Name:"phone_number_verified",Value:a&&a.length>0?"true":"false"});break;default:break}let c=new de.AdminUpdateUserAttributesCommand({Username:e,UserPoolId:process.env.USERPOOL_ID,UserAttributes:o});await t.send(c)};var pe={username:"Initial passwordless login verification",password:"Password login verification",sendotp:"Request OTP",verifyotp:"OTP verify",pwdreset2:"Password reset 1st verify",pwdresetverify2:"Password reset OTP verify",pwdreset3:"Password reset 2nd verify",pwdresetverify3:"Password reset OTP verify",selfservice2:"Self service 1st verify",selfserviceverify2:"OTP verify",selfservice3:"Self service 2nd verify",selfserviceverify3:"OTP verify",updateProfileSendOTP:"Update profile Request OTP",updateProfile:"Update profile OTP verify",emailverificationSendOTP:"Register New Account Request OTP",emailverificationverifyotp:"Register New Account OTP verify"},fe=e=>encodeURI(pe[e]?pe[e]:"Unknown");var K=async(e,r,a,s)=>{let t=(l,u,S)=>({isBase64Encoded:!1,statusCode:l,headers:{...r,requestId:S||""},body:JSON.stringify({message:u})}),o={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"};function c(l){return(0,he.createHash)("md5").update(l).digest("hex")}if(s==="updateProfile"||s==="removeProfile"||s==="checkSessionId"||s==="updateProfileSendOTP"){if(!await me(e,s))return t(400,"Invalid UUID",e.requestId);if(s==="checkSessionId")return t(200,"valid Session ID",e.requestId)}try{let l=await U("amfaConfigs"),u=await U("amfaPolicies"),S=l.salt,h=l.asmurl,z=null,m=null,g="default";if(s!=="emailverificationSendOTP"&&s!=="emailverificationverifyotp"){let n={UserPoolId:process.env.USERPOOL_ID,Filter:'email = "'+e.email+'"'},i=await a.send(new M.ListUsersCommand(n));if(!i||!i.Users||i.Users.length===0)return console.log("Did not find valid user for email:",e.email),t(500,"Did not find valid user for this email",e.requestId);let f=i.Users.filter(p=>p.UserStatus==="CONFIRMED"||"FORCE_CHANGE_PASSWORD");if(f.length===0)return console.log("Did not find valid user for email:",e.email),t(500,"Did not find valid user for this email, or user account has not been activated",e.requestId);if(f[0].UserStatus==="FORCE_CHANGE_PASSWORD"&&s==="username")return console.log("Admin Created User account needs to be actived:",e.email),t(202,"User account has not been activated",e.requestId);console.log("UserAttributes:",f[0].Attributes),z=f[0],m=z.Attributes.reduce((p,te)=>(p[te.Name]=te.Value,p));let b={UserPoolId:process.env.USERPOOL_ID,Username:f[0].Username},I=await a.send(new M.AdminListGroupsForUserCommand(b));console.log("userGroup:",I);let N=1e4;for(let p=0;p<I.Groups.length;p++)I.Groups[p].GroupName=I.Groups[p].GroupName.toLowerCase(),u[I.Groups[p].GroupName]&&u[I.Groups[p].GroupName].rank<N&&(g=I.Groups[p].GroupName,N=u[I.Groups[p].GroupName].rank);u[g]||(g="default")}switch(console.log("ug:",g),e.otptype){case"e":e.otpaddr=e.email;break;case"ae":e.otpaddr=m["custom:alter-email"];break;case"s":e.otpaddr=m?.phone_number;break;case"v":e.otpaddr=m["custom:voice-number"]?m["custom:voice-number"]:m.phone_number;break;default:break}if(e.otpaddr=e.otpaddr?.toLowerCase(),s==="updateProfileSendOTP"&&e.profile!==""&&e.otpaddr!==e.profile?.toLowerCase())return t(400,"Your entry was not valid, please try again.",e.requestId);if((s==="updateProfileSendOTP"||s==="updateProfile")&&(e.otpaddr=e.newProfile?.toLowerCase()),s==="removeProfile"){let n=!1;switch(e.otptype){case"ae":n=m["custom:alter-email"]===e.profile;break;case"s":n=e.profile===m.phone_number;break;case"v":n=e.profile===m["custom:voice-number"];break;default:break}return n?(await F(e.email,e.otptype,"",e.uuid,a),t(200,"OK",e.requestId)):t(400,"Your entry was not valid, please try again.",e.requestId)}if(s==="getOtpOptions"){let n=m.phone_number?m.phone_number.replace(/(\d{3})(\d{5})(\d{1})/,"$1xxx$3"):null,i=m["custom:alter-email"]?m["custom:alter-email"]:null;i&&i.indexOf("@")>0?i=`${i[0]}xxx@${i[i.lastIndexOf("@")+1]}xx.${i.substring(i.lastIndexOf(".")+1)}`:i=null;let f=m["custom:voice-number"]?m["custom:voice-number"].replace(/(\d{3})(\d{5})(\d{1})/,"$1xxx$3"):null,b=JSON.stringify({otpOptions:u[g].permissions,email:m.email,phoneNumber:n,aemail:i,vPhoneNumber:f});return console.log("body:",b),{statusCode:200,isBase64Encoded:!1,headers:r,body:b}}let C=u[g].policy_name?encodeURI(u[g].policy_name):"";if(s.startsWith("pwdreset")&&(C=u["password-reset"].policy_name?encodeURI(u["password-reset"].policy_name):""),(s.startsWith("selfservice")||s.startsWith("updateProfile"))&&(C=u["self-service"].policy_name?encodeURI(u["self-service"].policy_name):""),C==="")return console.log("Did not find a valid ASM Policy for the user group:",g),t(500,`Did not find a valid ASM Policy for the user group:${g})`,e.requestId);let B=e.origin,J=6,P=encodeURIComponent(e.email),Q=e.rememberDevice==="true"?0:1,Z=encodeURI(e.authParam),A=e.uIP?e.uIP:"00000000000",v=e.apti,O="e",y=P,k=1,ge=3,ee=P+"passwordless_check"+A,W=c(`${P}${B}${S}`),se="";if(e.cookies&&e.cookies.trim().length>0){let n=e.cookies.trim().indexOf(W)+W.length+1;se=e.cookies.trim().substring(n).split(";")[0]}let w=h+"/extAuthenticate.kv?l="+C+"&u="+P+"&uIp="+A+"&apti="+v+"&c="+se+"&wr="+B+"&igd="+Q+"&otpm="+O+"&p="+y+"&otpp="+k+"&af1="+ee+"&a="+Z,T=fe(s);switch(console.log("step:",s),s){case"username":w=w+"&sfl="+J+"&nsf="+ge+"&tType="+T;break;case"password":w=w+"&tType="+T;break;case"sendotp":O=e.otptype,y=encodeURIComponent(e.otpaddr),w=h+"/extResendOtp.kv?l="+C+"&u="+P+"&apti="+v+"&uIp="+A+"&otpm="+O+"&p="+y+"&tType="+T;break;case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":case"updateProfile":case"emailverificationverifyotp":let n=e.otpcode;w=h+"/extVerifyOtp.kv?l="+C+"&u="+P+"&uIp="+A+"&apti="+v+"&wr="+B+"&igd="+Q+"&otpm="+O+"&p="+y+"&otpp="+k+"&tType="+T+"&af1="+ee+"&a="+Z+"&o="+n;break;case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":case"updateProfileSendOTP":case"emailverificationSendOTP":O=e.otptype,y=encodeURIComponent(e.otpaddr),e.isResend?w=h+"/extResendOtp.kv?l="+C+"&u="+P+"&apti="+v+"&uIp="+A+"&otpm="+O+"&p="+y+"&tType="+T:(J=7,k=0,w=h+"/extAuthenticate.kv?l="+C+"&sfl="+J+"&u="+P+"&apti="+v+"&uIp="+A+"&otpm="+O+"&p="+y+"&tType="+T+"&otpp="+k);break;default:break}console.log("now posting to : ",w);let V=await fetch(w,{method:"POST"});if(V&&V.status){let n=await V.json();switch(console.log("amfaResponseJSON:",n),n.code){case 200:switch(s){case"updateProfile":return n.message==="OK"?(await F(e.email,e.otptype,e.otpaddr,e.uuid,a),t(200,"OK",e.requestId)):t(506,"The login service is not currently available. Contact the help desk.",e.requestId);case"username":case"password":case"verifyotp":if(n.message==="OK"){let i=s==="username"?await ne(e,a):await ae(e.email,e.apti);if(console.log("url:",i),i){Date.prototype.addDays=function(I){var N=new Date(this.valueOf());return N.setDate(N.getDate()+I),N};var d=new Date;let f=`${W}=${n.identifier}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; HttpOnly; Expires=${d.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`,b=`${le}=${n.identifier.substr(-16,16)}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; Expires=${d.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`;return{statusCode:200,isBase64Encoded:!1,multiValueHeaders:{"Set-Cookie":[f,b]},headers:o,body:JSON.stringify({location:i})}}else return t(505,"Service error, please contact the help desk.",e.requestId)}else return t(501,"The login service is not currently available. Contact the help desk.",e.requestId);case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":if(n.message==="OK"){let i=await $(e.email,e.apti);return{isBase64Encoded:!1,statusCode:200,headers:{...r,requestId:e.requestId},body:JSON.stringify({message:"OK",uuid:i})}}else return t(501,"The login service is not currently available. Contact the help desk.",e.requestId);case"emailverificationverifyotp":if(n.message==="OK"&&(await ce(e.email,e.password,e.attributes,a))?.User){let f=await $(e.email,e.apti);return{isBase64Encoded:!1,statusCode:200,headers:{...r,requestId:e.requestId},body:JSON.stringify({message:"OK",uuid:f})}}return t(501,"The login service is not currently available. Contact the help desk.",e.requestId);default:return t(505,"The login service is not currently available. Contact the help desk.",e.requestId)}case 202:switch(s){case"username":return t(202,"Your identity requires password login.",e.requestId);case"password":return{statusCode:202,isBase64Encoded:!1,headers:{...o,requestId:e.requestId},body:JSON.stringify({...m,otpOptions:u[g].permissions})};case"sendotp":case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":case"emailverificationSendOTP":return t(202,n.message,e.requestId);case"updateProfileSendOTP":let i=await $(e.email,e.apti,e.otpaddr);return{isBase64Encoded:!1,statusCode:202,headers:{...r,requestId:e.requestId},body:JSON.stringify({message:n.message,uuid:i})};case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":case"updateProfile":case"emailverificationverifyotp":return t(403,"The identity code you entered was not correct. Please try again.",e.requestId);default:break}break;case 203:return t(203,"Your location is not permitted. Contact the help desk.",e.requestId);case 401:return t(401,"You took too long or entered your otp wrong too many times. Try your login again.",e.requestId);default:return t(502,"We ran into an issue. Please contact the help desk.",e.requestId)}}return t(503,"amfa response error",e.requestId)}catch(l){return console.error('Error in step "'+s+'" :',l),l.message.indexOf("fetch failed")===-1?t(504,l.message?l.message:"Unknown error in amfa steps",e.requestId):t(504,"MFA Service is not responding. Contact the help desk.",e.requestId)}};var ve=e=>{switch(e.phase){case"username":return e&&e.email&&e.apti&&e.authParam;case"password":return e&&e.email&&e.password&&e.apti&&e.authParam;case"sendotp":case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":case"updateProfileSendOTP":case"emailverificationSendOTP":return e&&e.email&&e.otptype&&e.apti&&e.authParam;case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.authParam;case"emailverificationverifyotp":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.authParam&&e.attributes&&e.password;case"updateProfile":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.authParam&&e.uuid;case"getOtpOptions":return e&&e.email&&e.apti&&e.authParam;case"removeProfile":return e&&e.email&&e.apti&&e.authParam&&e.profile;default:break}return console.log("Invalid payload",e),!1},j={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"},Y=(e=200,r,a)=>({statusCode:e,headers:{...j,requestId:a},body:r}),X=new H.CognitoIdentityProviderClient({region:process.env.AWS_REGION}),Ue=e=>e.split(",")[0],ke=async e=>{console.log("Received event:",JSON.stringify(e,null,2));let r=Math.random().toString(36).substring(2,16)+Math.random().toString(36).substring(2,16);console.log("amfa requestid: ",r);let a="";try{let s=JSON.parse(e.body);if(console.log("payload",s),s&&ve(s)){let t=Ue(e.headers["X-Forwarded-For"].trim()),o={};switch(o.uIP=t,o.email=s.email?.trim()?.toLowerCase(),o.apti=s.apti,o.rememberDevice=s.rememberDevice,o.authParam=s.authParam,o.origin=`${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,o.otptype=s.otptype?.toLowerCase(),o.otpcode=s.otpcode,o.redirectUri=s.redirectUri,o.state=s.state,o.requestTimeEpoch=e.requestContext.requestTimeEpoch,o.uuid=s.uuid,o.newProfile=s.newProfile?s.newProfile.toLowerCase():"",o.profile=s.profile?s.profile.toLowerCase():"",o.requestId=r,o.attributes=s.attributes,o.password=s.password,o.isResend=s.isResend,o.cookies=e.headers.Cookie,console.log("oneEvent",o),s.phase){case"username":let c=await X.send(new H.ListUsersCommand({UserPoolId:process.env.USERPOOL_ID,Filter:`email = "${o.email}"`}));return console.log(c),(await U("amfaConfigs")).enable_passwordless&&c&&c.Users&&c.Users.length>0?await K(o,j,X,s.phase):Y(202,"Your identity requires password login.",r);default:return await K(o,j,X,s.phase)}}else a="incoming params error."}catch(s){return console.log("error details:",s),Y(s.statusCode?s.statusCode:500,JSON.stringify({message:"input param parse error"}),r)}return Y(500,JSON.stringify({message:a}),r)};0&&(module.exports={handler});
//# sourceMappingURL=amfa.js.map
