var we=Object.create;var k=Object.defineProperty;var Ie=Object.getOwnPropertyDescriptor;var Ce=Object.getOwnPropertyNames;var Se=Object.getPrototypeOf,ye=Object.prototype.hasOwnProperty;var Ae=(e,t)=>{for(var o in t)k(e,o,{get:t[o],enumerable:!0})},se=(e,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Ce(t))!ye.call(e,r)&&r!==o&&k(e,r,{get:()=>t[r],enumerable:!(s=Ie(t,r))||s.enumerable});return e};var te=(e,t,o)=>(o=e!=null?we(Se(e)):{},se(t||!e||!e.__esModule?k(o,"default",{value:e,enumerable:!0}):o,e)),Pe=e=>se(k({},"__esModule",{value:!0}),e);var Ue={};Ae(Ue,{handler:()=>be});module.exports=Pe(Ue);var G=require("@aws-sdk/client-cognito-identity-provider");var q=require("@aws-sdk/client-cognito-identity-provider"),de=require("node:crypto");var b=require("@aws-sdk/client-dynamodb"),re=async(e,t)=>{let o=new b.DynamoDBClient({region:process.env.AWS_REGION}),s={TableName:process.env.AUTHCODE_TABLE,Key:{username:{S:e},apti:{S:t}}},r=new b.GetItemCommand(s),a=await o.send(r);console.log("get authcode result:",a);let c=a.Item.state.S,l=a.Item.authCode.S;return`${a.Item.redirectUri.S}/?code=${l}&state=${c}`};var oe=te(require("crypto"),1),U=require("@aws-sdk/client-cognito-identity-provider"),D=require("@aws-sdk/client-dynamodb");function Te(e){for(var t="",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",s=o.length,r=0;r<e;r++)t+=o.charAt(Math.floor(Math.random()*s));return t}var Oe=async(e,t)=>{let o=process.env.APPCLIENT_ID,s=process.env.APP_SECRET,r=oe.createHmac("SHA256",s).update(e+o).digest("base64"),a={AuthFlow:"CUSTOM_AUTH",ClientId:o,AuthParameters:{USERNAME:e,SECRET_HASH:r}};console.log("initiateAuthParam:",a);let c=new U.InitiateAuthCommand(a),l=await t.send(c);if(l.ChallengeName==="CUSTOM_CHALLENGE"){let n={ChallengeName:"CUSTOM_CHALLENGE",ClientId:o,ChallengeResponses:{USERNAME:e,SECRET_HASH:r,ANSWER:process.env.MAGIC_STRING},Session:l.Session},h=new U.RespondToAuthChallengeCommand(n),d=await t.send(h);return console.log("user:",d),d}return null},ve=async(e,t,o)=>{console.log("tokens write user:",e),console.log("payload:",t),console.log("authCode:",o);let s='{"id_token":"'+e.AuthenticationResult.IdToken+'","access_token":"'+e.AuthenticationResult.AccessToken+'","refresh_token":"'+e.AuthenticationResult.RefreshToken+'","expires_in":300,"token_type":"Bearer"}',r={Item:{username:{S:t.email},apti:{S:t.apti},authCode:{S:o},state:{S:t.state},redirectUri:{S:t.redirectUri},tokenString:{S:s},timestamp:{N:`${t.requestTimeEpoch}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.AUTHCODE_TABLE},a=new D.PutItemCommand(r),l=await new D.DynamoDBClient({region:process.env.AWS_REGION}).send(a);console.log("tokens write result:",l)},ae=async(e,t)=>{let o=await Oe(e.email,t);if(o.AuthenticationResult){let s=Te(32);return await ve(o,e,s),`${e.redirectUri}/?code=${s}&state=${e.state}`}return null};var ie="apenc";var R=require("@aws-sdk/client-dynamodb"),ne=te(require("crypto"),1),Ne=new R.DynamoDBClient({region:process.env.AWS_REGION}),W=async(e,t,o)=>{console.log("generate pwd reset id for user:",e),console.log("generate pwd reset id, apti:",t),console.log("generate pwd reset id, otpaddr:",o);let s=ne.randomUUID(),r=Date.now(),c={Item:{uuid:{S:s},username:{S:e},apti:{S:t},otpaddr:{S:o||""},timestamp:{N:`${r}`}},ReturnConsumedCapacity:"TOTAL",TableName:process.env.PWDRESET_ID_TABLE},l=new R.PutItemCommand(c),n=await Ne.send(l);return console.log("pwd reset id write result:",n),s};var _=require("@aws-sdk/client-dynamodb"),T=async e=>{let t=new _.DynamoDBClient({region:process.env.AWS_REGION}),o={TableName:process.env.AMFACONFIG_TABLE,Key:{configtype:{S:e}}},s=new _.GetItemCommand(o),r=await t.send(s);if(console.log(`get ${e} result:`,r),r.Item===void 0)throw new Error(`No ${e} found`);let a=JSON.parse(r.Item.value.S);return console.log("result:",a),a};var ce=require("@aws-sdk/client-cognito-identity-provider"),C=require("@aws-sdk/client-dynamodb"),le=async e=>{let t=new C.DynamoDBClient({region:process.env.AWS_REGION}),o={TableName:process.env.PWDRESET_ID_TABLE,Key:{uuid:{S:e.uuid}}};try{let s=new C.GetItemCommand(o),r=await t.send(s);console.log("get update profile uid result:",r);let a=r.Item.username.S,c=r.Item.apti.S,l=r.Item.otpaddr.S;return a===e.email&&c===e.apti&&l===e.otpaddr}catch(s){console.log("error",s)}return!1},ue=async(e,t,o,s,r)=>{let a=[];switch(t){case"ae":a.push({Name:"custom:alter-email",Value:o});break;case"v":a.push({Name:"custom:voice-number",Value:o});break;case"s":a.push({Name:"phone_number",Value:o}),a.push({Name:"phone_number_verified",Value:"true"});break;default:break}let c=new ce.AdminUpdateUserAttributesCommand({Username:e,UserPoolId:process.env.USERPOOL_ID,UserAttributes:a});await r.send(c);let l=new C.DynamoDBClient({region:process.env.AWS_REGION}),n={TableName:process.env.PWDRESET_ID_TABLE,Key:{uuid:{S:s}}};try{await l.send(new C.DeleteItemCommand(n))}catch(h){console.log(`delete uuid in ddb table ${process.env.PWDRESET_ID_TABLE} error, uuid:`,s),console.log("dynamobdb delete item error: ",h)}};var J=async(e,t,o,s)=>{let r=(n,h,d)=>({isBase64Encoded:!1,statusCode:n,headers:{...t,requestId:d||""},body:JSON.stringify({message:h})}),a={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"};function c(n){return(0,de.createHash)("md5").update(n).digest("hex")}if(s==="updateProfile"&&!await le(e))return r(400,"Invalid UUID",e.requestId);try{let n=await T("amfaConfigs"),h=n.salt,d=n.asmurl,X={UserPoolId:process.env.USERPOOL_ID,Filter:'email = "'+e.email+'"'},O=await o.send(new q.ListUsersCommand(X));if(!O||!O.Users||O.Users.length===0)return console.log("Did not find valid user for email:",e.email),r(500,"Did not find valid user for this email",e.requestId);let v=O.Users.filter(i=>i.UserStatus==="CONFIRMED");if(v.length===0)return console.log("Did not find valid user for email:",e.email),r(500,"Did not find valid user for this email, user status is not CONFIRMED",e.requestId);console.log("UserAttributes:",v[0].Attributes);let A=v[0].Attributes.reduce((i,p)=>(i[p.Name]=p.Value,i)),me={UserPoolId:process.env.USERPOOL_ID,Username:v[0].Username},g=await o.send(new q.AdminListGroupsForUserCommand(me));console.log("userGroup:",g);let m="default",Y=1e4,u=await T("amfaPolicies");for(let i=0;i<g.Groups.length;i++)g.Groups[i].GroupName=g.Groups[i].GroupName.toLowerCase(),u[g.Groups[i].GroupName]&&u[g.Groups[i].GroupName].rank<Y&&(m=g.Groups[i].GroupName,Y=u[g.Groups[i].GroupName].rank);if(u[m]||(m="default"),console.log("ug:",m),s==="getOtpOptions"){let i=JSON.stringify({otpOptions:u[m].permissions,email:A.email,phoneNumber:A.phone_number,aemail:A["custom:alter-email"],vPhoneNumber:A["custom:voice-number"]});return console.log("body:",i),{statusCode:200,isBase64Encoded:!1,headers:t,body:i}}let w=u[m].policy_name?encodeURI(u[m].policy_name):"";if(s.startsWith("pwdreset")&&(w=u["password-reset"].policy_name?encodeURI(u["password-reset"].policy_name):""),(s.startsWith("selfservice")||s.startsWith("updateProfile"))&&(w=u["self-service"].policy_name?encodeURI(u["self-service"].policy_name):""),w==="")return console.log("Did not find a valid ASM Policy for the user group:",m),r(500,`Did not find a valid ASM Policy for the user group:${m})`,e.requestId);let $=e.origin,M=6,I=e.email,z=e.rememberDevice==="true"?0:1,j=encodeURI(e.authParam),L=e.uIP?e.uIP:"00000000000",N=e.apti,S="e",y=I,E=1,pe=3,Q=I+"passwordless_check"+L,x=c(`${I}${$}${h}`),Z="";if(e.cookies&&e.cookies.trim().length>0){let i=e.cookies.trim().indexOf(x)+x.length+1;Z=e.cookies.trim().substring(i).split(";")[0]}let f=d+"/extAuthenticate.kv?l="+w+"&u="+I+"&uIp="+L+"&apti="+N+"&c="+Z+"&wr="+$+"&igd="+z+"&otpm="+S+"&p="+y+"&otpp="+E+"&af1="+Q+"&a="+j,ee={username:"Initial passwordless login verification",password:"Password login verification",sendotp:"Request OTP",verifyotp:"OTP verify",pwdreset2:"Password reset 1st verify",pwdresetverify2:"OTP verify",pwdreset3:"Password reset 2nd verify",pwdresetverify3:"OTP verify",selfservice2:"Self service 1st verify",selfserviceverify2:"OTP verify",selfservice3:"Self service 2nd verify",selfserviceverify3:"OTP verify",updateProfileSendOTP:"Update profile verify",updateProfile:"OTP verify"},P=encodeURI(ee[s]?ee[s]:"Unknown");switch(s){case"username":f=f+"&sfl="+M+"&nsf="+pe+"&tType="+P;break;case"password":f=f+"&tType="+P;break;case"sendotp":S=e.otptype,y=e.otpaddr,f=d+"/extResendOtp.kv?l="+w+"&u="+I+"&apti="+N+"&otpm="+S+"&p="+y+"&tType="+P;break;case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":case"updateProfile":let i=e.otpcode;f=d+"/extVerifyOtp.kv?l="+w+"&u="+I+"&uIp="+L+"&apti="+N+"&wr="+$+"&igd="+z+"&otpm="+S+"&p="+y+"&otpp="+E+"&tType="+P+"&af1="+Q+"&a="+j+"&o="+i;break;case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":case"updateProfileSendOTP":S=e.otptype,y=e.otpaddr,M=7,E=0,f=d+"/extAuthenticate.kv?l="+w+"&sfl="+M+"&u="+I+"&apti="+N+"&otpm="+S+"&p="+y+"&tType="+P+"&otpp="+E;break;default:break}console.log("now posting to : ",f);let H=await fetch(f,{method:"POST"});if(H&&H.status){let i=await H.json();switch(console.log("amfaResponseJSON:",i),i.code){case 200:switch(s){case"updateProfile":return i.message==="OK"?(await ue(e.email,e.otptype,e.otpaddr,e.uuid,o),r(200,"OK",e.requestId)):r(506,"The login service is not currently available. Contact the help desk.",e.requestId);case"username":case"password":case"verifyotp":if(i.message==="OK"){let p=s==="username"?await ae(e,o):await re(e.email,e.apti);if(console.log("url:",p),p){Date.prototype.addDays=function(ge){var B=new Date(this.valueOf());return B.setDate(B.getDate()+ge),B};var l=new Date;let fe=`${x}=${i.identifier}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; HttpOnly; Expires=${l.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`,he=`${ie}=${i.identifier.substr(-16,16)}; Domain=${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}; Expires=${l.addDays(120).toUTCString()}; Secure; SameSite=Strict; Path=/`;return{statusCode:200,isBase64Encoded:!1,multiValueHeaders:{"Set-Cookie":[fe,he]},headers:a,body:JSON.stringify({location:p})}}else return r(505,"Service error, please contact the help desk.",e.requestId)}else return r(501,"The login service is not currently available. Contact the help desk.",e.requestId);case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":if(i.message==="OK"){let p=await W(e.email,e.apti);return{isBase64Encoded:!1,statusCode:200,headers:{...t,requestId:e.requestId},body:JSON.stringify({message:"OK",uuid:p})}}else return r(501,"The login service is not currently available. Contact the help desk.",e.requestId);default:return r(505,"The login service is not currently available. Contact the help desk.",e.requestId)}case 202:switch(s){case"username":return r(202,"Your identity requires password login.",e.requestId);case"password":return{statusCode:202,isBase64Encoded:!1,headers:{...a,requestId:e.requestId},body:JSON.stringify({...A,otpOptions:u[m].permissions})};case"sendotp":case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":return r(202,i.message,e.requestId);case"updateProfileSendOTP":let p=await W(e.email,e.apti,e.otpaddr);return{isBase64Encoded:!1,statusCode:202,headers:{...t,requestId:e.requestId},body:JSON.stringify({message:i.message,uuid:p})};case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":case"updateProfile":return r(403,"The identity code you entered was not correct. Please try again.",e.requestId);default:break}break;case 203:return r(203,"Your location is not permitted. Contact the help desk.",e.requestId);case 401:return r(401,"You took too long or entered your otp wrong too many times. Try your login again.",e.requestId);default:return r(502,"We ran into an issue. Please contact the help desk.",e.requestId)}}return r(503,"amfa response error",e.requestId)}catch(n){return console.error('Error in step "'+s+'" :',n),n.message.indexOf("fetch failed")===-1?r(504,n.message?n.message:"Unknown error in amfa steps",e.requestId):r(504,"MFA Service is not responding. Contact the help desk.",e.requestId)}};var Ee=e=>{switch(e.phase){case"username":return e&&e.email&&e.apti&&e.authParam;case"password":return e&&e.email&&e.password&&e.apti&&e.authParam;case"sendotp":case"pwdreset2":case"pwdreset3":case"selfservice2":case"selfservice3":case"updateProfileSendOTP":return e&&e.otpaddr&&e.otptype&&e.apti&&e.authParam;case"verifyotp":case"pwdresetverify2":case"pwdresetverify3":case"selfserviceverify2":case"selfserviceverify3":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.authParam;case"updateProfile":return e&&e.email&&e.otpcode&&e.otptype&&e.apti&&e.authParam&&e.uuid;case"getOtpOptions":return e&&e.email&&e.apti&&e.authParam;default:break}return console.log("Invalid payload",e),!1},V={"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Set-Cookie,Cookie,X-Requested-With","Access-Control-Allow-Origin":`https://${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,"Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Set-Cookie","Access-Control-Allow-Credentials":"true"},F=(e=200,t,o)=>({statusCode:e,headers:{...V,requestId:o},body:t}),K=new G.CognitoIdentityProviderClient({region:process.env.AWS_REGION}),ke=e=>e.split(",")[0],be=async e=>{console.log("Received event:",JSON.stringify(e,null,2));let t=Math.random().toString(36).substring(2,16)+Math.random().toString(36).substring(2,16);console.log("amfa requestid: ",t);let o="";try{let s=JSON.parse(e.body);if(console.log("payload",s),s&&Ee(s)){let r=ke(e.headers["X-Forwarded-For"].trim()),a={};switch(a.uIP=r,a.email=s.email,a.apti=s.apti,a.rememberDevice=s.rememberDevice,a.authParam=s.authParam,a.origin=`${process.env.TENANT_ID}.${process.env.DOMAIN_NAME}`,a.otptype=s.otptype,a.otpcode=s.otpcode,a.otpaddr=s.otpaddr,a.redirectUri=s.redirectUri,a.state=s.state,a.requestTimeEpoch=e.requestContext.requestTimeEpoch,a.uuid=s.uuid,a.requestId=t,a.cookies=e.headers.Cookie,console.log("oneEvent",a),s.phase){case"username":let c=await K.send(new G.ListUsersCommand({UserPoolId:process.env.USERPOOL_ID,Filter:`email = "${s.email}"`}));return console.log(c),(await T("amfaConfigs")).enable_passwordless&&c&&c.Users&&c.Users.length>0?await J(a,V,K,s.phase):F(202,"Your identity requires password login.",t);default:return await J(a,V,K,s.phase)}}else o="incoming params error."}catch(s){return console.log(s),F(s.statusCode?s.statusCode:500,JSON.stringify({message:"input param parse error"}),t)}return F(500,JSON.stringify({message:o}),t)};0&&(module.exports={handler});
//# sourceMappingURL=amfa.js.map
