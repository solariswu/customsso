{
  "version": 3,
  "sources": ["../getKms.mjs"],
  "sourcesContent": ["import {\n\tSecretsManagerClient,\n\tGetSecretValueCommand,\n} from \"@aws-sdk/client-secrets-manager\";\n\nconst client = new SecretsManagerClient({\n\tregion: process.env.AWS_REGION,\n});\n\nexport const getSecret = async () => {\n\tconst response = await client.send(\n\t\tnew GetSecretValueCommand({\n\t\t\tSecretId: process.env.SECRET_NAME,\n\t\t})\n\t);\n\tconst secret = JSON.parse(response.SecretString);\n\n\treturn secret;\n}\n\nexport const getAsmSalt = async () => {\n\tconst secret = await getSecret ();\n\treturn secret?.asmSalt;\n}\n\nexport const getSMTP = async () => {\n\tconst response = await client.send(\n\t\tnew GetSecretValueCommand({\n\t\t\tSecretId: process.env.SMTPSECRET_NAME,\n\t\t})\n\t);\n\tconst secret = JSON.parse(response.SecretString);\n\n\treturn secret;\n}\n\nexport const getAsmPortalTenantAuthToken = async () => {\n\tconst response = await client.send(\n\t\tnew GetSecretValueCommand({\n\t\t\tSecretId: process.env.ASMSECRET_NAME,\n\t\t})\n\t);\n\tconst secret = JSON.parse(response.SecretString);\n\n\treturn secret?.tenantAuthToken;\n}\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,iCAAAE,EAAA,eAAAC,EAAA,YAAAC,EAAA,cAAAC,IAAA,eAAAC,EAAAN,GAAA,IAAAO,EAGO,2CAEDC,EAAS,IAAI,uBAAqB,CACvC,OAAQ,QAAQ,IAAI,UACrB,CAAC,EAEYH,EAAY,SAAY,CACpC,IAAMI,EAAW,MAAMD,EAAO,KAC7B,IAAI,wBAAsB,CACzB,SAAU,QAAQ,IAAI,WACvB,CAAC,CACF,EAGA,OAFe,KAAK,MAAMC,EAAS,YAAY,CAGhD,EAEaN,EAAa,UACV,MAAME,EAAW,IACjB,QAGHD,EAAU,SAAY,CAClC,IAAMK,EAAW,MAAMD,EAAO,KAC7B,IAAI,wBAAsB,CACzB,SAAU,QAAQ,IAAI,eACvB,CAAC,CACF,EAGA,OAFe,KAAK,MAAMC,EAAS,YAAY,CAGhD,EAEaP,EAA8B,SAAY,CACtD,IAAMO,EAAW,MAAMD,EAAO,KAC7B,IAAI,wBAAsB,CACzB,SAAU,QAAQ,IAAI,cACvB,CAAC,CACF,EAGA,OAFe,KAAK,MAAMC,EAAS,YAAY,GAEhC,eAChB",
  "names": ["getKms_exports", "__export", "getAsmPortalTenantAuthToken", "getAsmSalt", "getSMTP", "getSecret", "__toCommonJS", "import_client_secrets_manager", "client", "response"]
}
